/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package FORMULARIOS;

import CLASSREPORT.RECEP;
import CONEXION.CONEXION;
import FECHA.FECHA;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CARLOS
 */
public final class RECIBIR extends javax.swing.JDialog {
    DefaultTableModel tabla_model;
    CONEXION mysql = new CONEXION();
    Connection cn = mysql.Conectar();
    Statement st;
    ResultSet rs;
    PreparedStatement pst;
    FECHA f = new FECHA();
    /**
     * Creates new form RECEPCION
     */
    public RECIBIR(java.awt.Frame parent, boolean modal) {
        
        initComponents();
        this.setLocationRelativeTo(null);
        TablaRecepcion();
    }
    public void TablaRecepcion(){
        
        String sql="SELECT doc.iddoc, doc.nro_doc,doc.hoja_ruta, doc.fecha, dep1.dependencia, " 
                +"dep.dependencia from documento doc inner join derivar dr on doc.iddoc=dr.iddoc " 
                +"inner join dependencias dep on dr.iddependencia_d = dep.iddependencia " 
                +"inner join dependencias dep1 on dr.iddependencia_o = dep1.iddependencia " 
                +"inner join usuarios us on dr.usuario = us.usuario "
                + "inner join personal per on us.dni = per.dni "
                + "where doc.idactividad=1 and dep.iddependencia="+this.getDependencia()+" and "
                + "dep1.iddependencia="+this.getDependencia()
                +" and DATE_FORMAT(doc.fecha,'%Y') = DATE_FORMAT(NOW(),'%Y') and dr.estado like 'DERIVADO' and dr.IDDERIVAR = (select max(dr2.idderivar) "
                + "from derivar dr2 where dr.iddoc=dr2.IDDOC) "
                + "and dr.asignado like '"+this.getNombres()+"'";
        String titulos [] = {"IDDOC","NRO_DOC","HOJA_RUTA","FECHA","DEPEN_ORIGEN","DEPEN_DESTINO","SELC"};
        String registro [] = new String[7];
        tabla_model = new DefaultTableModel(null, titulos){ Class types[]= {
            String.class, String.class, String.class, String.class,
            String.class, String.class,Boolean.class
        };
        // making sure that it returns boolean.class. 
        @Override
        public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
        }
        };       
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next()){
                registro[0]=rs.getString(1);
                registro[1]=rs.getString(2);
                registro[2]=rs.getString(3);
                registro[3]=rs.getString(4);
                registro[4]=rs.getString(5);
                registro[5]=rs.getString(6);
                tabla_model.addRow(registro);
            }
            tblRecepcion.setModel(tabla_model);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "ERROR AL CARGAR LA TABLA RECEPCION \n "+e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        jPanel1 = new javax.swing.JPanel();
        btnActualizar = new javax.swing.JButton();
        cbRecepcionTo = new javax.swing.JCheckBox();
        btnSalir = new javax.swing.JButton();
        btnRecepcion = new javax.swing.JButton();
        btnRecepcion1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecepcion = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("RECEPCION");

        panel1.setColorPrimario(new java.awt.Color(255, 255, 255));
        panel1.setColorSecundario(new java.awt.Color(153, 204, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnActualizar.setBackground(new java.awt.Color(204, 204, 204));
        btnActualizar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        cbRecepcionTo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cbRecepcionTo.setText("SELECCIONAR TODOS ?");
        cbRecepcionTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRecepcionToActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(204, 204, 204));
        btnSalir.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSalir.setText("IMPRIMIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnRecepcion.setBackground(new java.awt.Color(204, 204, 204));
        btnRecepcion.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnRecepcion.setText("RECEPCIONAR");
        btnRecepcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecepcionActionPerformed(evt);
            }
        });

        btnRecepcion1.setBackground(new java.awt.Color(255, 0, 0));
        btnRecepcion1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnRecepcion1.setText("SALIR");
        btnRecepcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecepcion1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbRecepcionTo)
                .addGap(40, 40, 40)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRecepcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRecepcion1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbRecepcionTo)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRecepcion1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRecepcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        jScrollPane1.setViewportView(tblRecepcion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        RECEP re = new RECEP();
        re.ejecutarReporte(this.getDependencia(), this.nombres);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cbRecepcionToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRecepcionToActionPerformed
        if(cbRecepcionTo.isSelected()){
            btnRecepcion.setEnabled(true);
            int contf=tblRecepcion.getRowCount(); 
            for(int i=0;i<contf;i++){
                tblRecepcion.setValueAt(true, i, 6);
            }
        }
        else{
            int n =tblRecepcion.getRowCount();
            for(int i=0;i<n;i++){
                tblRecepcion.setValueAt(false, i, 6);
            }
            btnRecepcion.setEnabled(false);
        }
    }//GEN-LAST:event_cbRecepcionToActionPerformed

    private void btnRecepcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecepcionActionPerformed
        int cont = tblRecepcion.getRowCount();
        if(cont > 0){
            int contfila=tblRecepcion.getRowCount();
            int n1=0;
            boolean estad;
            String id;
            for(int i=0; i<contfila; i++){
                estad=(boolean) tblRecepcion.getValueAt(i, 6);
                id = (String) tblRecepcion.getValueAt(i, 0);
                if(estad == true){
                    int idderivar = 0;
                    try {
                        String SQL="SELECT COUNT(dc.IDDOC) FROM DOCUMENTO dc "
                                + "INNER JOIN DERIVAR dr on dc.iddoc=dr.iddoc "
                                + "WHERE dc.iddoc="+id;
                        st = cn.createStatement();
                        rs = st.executeQuery(SQL);
                        while(rs.next()){
                            idderivar=Integer.parseInt(rs.getString(1));
                        }
                    } catch (SQLException | NumberFormatException e) {
                        JOptionPane.showConfirmDialog(null, e);
                    }
                    String idderi= String.valueOf(idderivar+1);
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try {
                        String sSQL2 ="UPDATE documento "
                                + "SET estado = ? "
                                + "where iddoc = "+id;
                        PreparedStatement pst1 = cn.prepareStatement(sSQL2);
                        pst1.setString(1, "RECIBIDO");
                        pst1.executeUpdate();
                        String sSQl3 = "INSERT INTO derivar (IDDERIVAR,IDDOC, FECHA,"
                                + "ESTADO, USUARIO,IDDEPENDENCIA_O, IDDEPENDENCIA_D) "
                                + "VALUES (?,?,?,?,?,?,?);";
                        PreparedStatement pst = cn.prepareStatement(sSQl3);
                        pst.setString(1, idderi);
                        pst.setString(2, id);
                        pst.setString(3, sdf.format(f.Fecha()));
                        pst.setString(4, "RECEPCIONADO");
                        pst.setString(5, this.getUsuario().toUpperCase());
                        pst.setString(6, this.getDependencia());
                        pst.setString(7, this.getDependencia());
                        n1=pst.executeUpdate();
                    } catch (SQLException | HeadlessException e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }
            if(n1>0){
               JOptionPane.showMessageDialog(rootPane, "SE HAN RECEPCIONADO TODOS LOS DOCUMENTOS"
                       + " SELECCIONADOS"); 
                btnRecepcion.setEnabled(false);
                TablaRecepcion();
                int nrofila=this.tblRecepcion.getRowCount();
               for(int i=0;i<nrofila;i++){
                   tblRecepcion.setValueAt(false, i, 6);
               }
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "NO HAY NINGUN DOCUMENTO PARA RECEPCIONAR");
        }
    }//GEN-LAST:event_btnRecepcionActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        TablaRecepcion();
        int contfila=tblRecepcion.getRowCount();
        for(int i=0;i<contfila;i++){
            tblRecepcion.setValueAt(false, i, 6);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnRecepcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecepcion1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnRecepcion1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RECIBIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                RECIBIR dialog = new RECIBIR(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnRecepcion;
    private javax.swing.JButton btnRecepcion1;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox cbRecepcionTo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JTable tblRecepcion;
    // End of variables declaration//GEN-END:variables
    public String getUsuario() {
        return Usuario;
    }

    public void setUsuario(String Usuario) {
        this.Usuario = Usuario;
    }

    public String getDependencia() {
        return Dependencia;
    }

    public void setDependencia(String Dependencia) {
        this.Dependencia = Dependencia;
    }
    String Usuario, Dependencia, nombres; 

    public String getNombres() {
        return nombres;
    }

    public void setNombres(String nombres) {
        this.nombres = nombres;
    }
 
}
