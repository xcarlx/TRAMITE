/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package FORMULARIOS;

import CONEXION.CONEXION;
import FECHA.FECHA;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public final class GUIA_PROVINCIA extends javax.swing.JDialog {
    CONEXION mysql = new CONEXION();
    Connection cn = mysql.Conectar();
    DefaultTableModel tabla_guiaProvin;
    boolean b=false;
    String AnuevoGuia;
    String AnuevoDetalle;
    String idGuia_d;
    String idGuia_m;
    FECHA f = new FECHA();
    /**
     * Creates new form GUIA_PROVINCIA
     */
    public GUIA_PROVINCIA () {
        initComponents();
        txtResponsable.setEnabled(false);
        txtResponsable.setText("");
        this.setLocationRelativeTo(null);
        HIDetalle(b);
        HIGuia(b);
        Combo();
        dcFecha.setDate(f.Fecha());
        btnFinalizar.setEnabled(b);
        lblGuiaProv.setText(" ");
        IdiguiaActiva();
    }
    public void TablaGuiaPro(){
        String titulo [] ={"Nro","TIPO_DOC","Nro_DOC","DEPEN_ORI"};
        String registro [] = new String[4];
        String sSQL="select idguia_d, tipo, nro_doc, dependencia_o "
                +"from guia_detalle gd inner join tipo_doc tc on gd.idtipo_doc=tc.idtipo_doc "
                +"inner join guia g on g.idguia=gd.idguia " 
                +"where g.NROGUIA= '"+lblGuiaProv.getText()
                +"' and g.idtipo_guia = 2 " 
                +"and g.estado like 'ACTIVO' AND gd.idtipo_guia = 2";
        tabla_guiaProvin = new DefaultTableModel(null, titulo);
        
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
            while(rs.next()){
                registro[0]=rs.getString(1);
                registro[1]=rs.getString(2);
                registro[2]=rs.getString(3);
                registro[3]=rs.getString(4);
                tabla_guiaProvin.addRow(registro);
            }
            tblGuiaPro.setModel(tabla_guiaProvin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
            
    }
    
    public void HIGuia(boolean a){
        txtEnviador.setEnabled(a);
        dcFecha.setEnabled(a);
        txtEnviador.setText("");
        cmbProvincia.setEnabled(a);
        cmbDependencia.setEnabled(a);
        cmbResponsable.setEnabled(a);
        btnGuardar.setEnabled(a);
        btnCancelar.setEnabled(a);
        
    }
    public void HIDetalle(boolean a){
        txtNroDoc.setEnabled(a);
        txtDependenciaO.setEnabled(a);
        cmbTipoDoc.setEnabled(a);
        txtNroDoc.setText("");
        txtDependenciaO.setText("");
        btnAgregar.setEnabled(a);
        btnImprimir.setEnabled(a);
        btnDCancelar.setEnabled(a);
    }
        void BuscarDocEditar(String idguia_D){
        String sSQL;
        cn = mysql.Conectar();
        sSQL="SELECT nro_doc,dependencia_o,idtipo_doc FROM guia_detalle "
                + "WHERE idguia_d="+idguia_D+" AND idtipo_guia=2 "
                + "AND idguia=(select max(idguia) from guia where idtipo_guia=2)";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
            while(rs.next()){
                txtNroDoc.setText(rs.getString(1));
                txtDependenciaO.setText(rs.getString(2));
                cmbTipoDoc.setSelectedIndex(Integer.parseInt(rs.getString(3))-1);
            }
            idGuia_d=idguia_D;
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e);
        }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        miEditar = new javax.swing.JMenuItem();
        panel1 = new org.edisoncor.gui.panel.Panel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEnviador = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnNuevoGuia = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtmodificar = new javax.swing.JButton();
        dcFecha = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        cmbProvincia = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbDependencia = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        cmbResponsable = new javax.swing.JComboBox();
        cbResponsable = new javax.swing.JCheckBox();
        txtResponsable = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNroDoc = new javax.swing.JTextField();
        txtDependenciaO = new javax.swing.JTextField();
        cmbTipoDoc = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        btnNuevoDetalle = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        btnDCancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblGuiaProv = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGuiaPro = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        miEditar.setText("MODIFICAR");
        miEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(miEditar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GUIAS PARA PROVINCIA");
        setResizable(false);

        panel1.setColorPrimario(new java.awt.Color(255, 255, 255));
        panel1.setColorSecundario(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("FECHA ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("ENVIADO POR");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnNuevoGuia.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNuevoGuia.setText("NUEVO");
        btnNuevoGuia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoGuiaActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(204, 0, 51));
        btnSalir.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtmodificar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtmodificar.setText("MODIFICAR");
        txtmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmodificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevoGuia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtmodificar)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoGuia, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtmodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("LUGAR");

        cmbProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProvinciaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("PROVINCIA");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("DEPENDENCIA");

        cmbDependencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDependenciaActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setText("RESPONSABLE");

        cbResponsable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbResponsable.setText("OTRO RESPO");
        cbResponsable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbResponsableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(cbResponsable))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtResponsable, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(txtEnviador))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel13))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cmbProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(cmbDependencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbResponsable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel7)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDependencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEnviador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbResponsable)
                            .addComponent(txtResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "DETALLE DE LA GUIA DE PROVINCIA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Nro DE DOCUMENTO");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("DEPENDENCIA ORIGEN");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("TIPO DE DOCUMENTO");

        txtNroDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroDocActionPerformed(evt);
            }
        });

        txtDependenciaO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDependenciaOActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        btnNuevoDetalle.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNuevoDetalle.setText("NUEVO");
        btnNuevoDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoDetalleActionPerformed(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnImprimir.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnImprimir.setText("IMPRIMIR");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnFinalizar.setBackground(new java.awt.Color(51, 153, 0));
        btnFinalizar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnFinalizar.setText("FINALIZAR");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnDCancelar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDCancelar.setText("CANCELAR");
        btnDCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(btnNuevoDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(btnNuevoDetalle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("GUIA_PROV");

        lblGuiaProv.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblGuiaProv.setForeground(new java.awt.Color(0, 51, 204));
        lblGuiaProv.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(txtNroDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDependenciaO, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(21, 21, 21)
                        .addComponent(cmbTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblGuiaProv, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbTipoDoc)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(lblGuiaProv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNroDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtDependenciaO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tblGuiaPro.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(tblGuiaPro);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jButton2.setText("BUSCAR POR GUIA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cmbProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProvinciaActionPerformed
        cmbDependencia.removeAllItems();
        String sSQL="select dependencia from dependencias "
                + "where iddepartamento=6 and idprovincia="+(cmbProvincia.getSelectedIndex()+1);
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
            while(rs.next()){
                cmbDependencia.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_cmbProvinciaActionPerformed

    private void btnNuevoGuiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoGuiaActionPerformed
        IdiguiaActiva();
        int id = 0;
        String sql="SELECT count(idguia) from guia where idtipo_guia=2 and ESTADO LIKE 'ACTIVO'";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                id=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "ERROR AL CAPTURAR EL cout iddgia \n"+e);
        }
        if(id==0){
            AnuevoGuia="NUEVO";
            b=true;
            HIGuia(b);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "TIENE QUE FINALIZAR LA GUIA ANTERIOR PARA PODER CREAR UNA NUEVA");
            HIGuia(false);
        }
    }//GEN-LAST:event_btnNuevoGuiaActionPerformed

    private void cmbDependenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDependenciaActionPerformed
        cmbResponsable.removeAllItems();
        String sSQL="select CONCAT(nombres,' ',apellidos) from personal p "
                + "inner join dependencias dep on p.iddependencia=dep.iddependencia "
                + "where dep.dependencia LIKE '%"+(cmbDependencia.getSelectedItem())+"%'";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
            while(rs.next()){
                cmbResponsable.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_cmbDependenciaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String sSQL = null,msj, sSQL1 = null;
        switch(AnuevoGuia){
            case "NUEVO":
                sSQL="INSERT INTO GUIA (IDGUIA, IDTIPO_GUIA, PROVINCIA,FECHA_ENVIO, "
                + "ENVIADOR, RESPONSABLE,ESTADO, IDDEPENDENCIA,NROGUIA) VALUES(?,?,?,?,?,?,?,?,?)";
                msj="GUIA INGRESADA";
                break;
            case "MODIFICAR":
                sSQL1="UPDATE guia SET provincia=?, responsable=?, iddependencia=? "
                        + "where idtipo_guia=2 and idguia="+idGuia_m;
                msj="GUIA MODIFICADA";
                break;
            default:
                    msj="ERROR";
                break;
        }
        int idguia = 0;
        try {
            String sql="select count(idguia) from guia where idtipo_guia=2";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                idguia=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        String iddependencia = null;
        try {
            String sql="select iddependencia from dependencias "
                    + "where dependencia like '%"+(cmbDependencia.getSelectedItem())+"%'";
            Statement st =cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                iddependencia=rs.getString(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        int nroguia = 0;
        try {
            String sql2="select count(idguia) from guia where idtipo_guia=2 AND "
                    + "DATE_FORMAT(FECHA_ENVIO,'%Y') = DATE_FORMAT(NOW(),'%Y')";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql2);
            while(rs.next()){
                nroguia=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        SimpleDateFormat sdf11=new SimpleDateFormat("yyyy");
        String nro;
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy");
        if("2013".equals(sdf1.format(f.Fecha()))){
            nro = String.valueOf((nroguia+48))+"-"+sdf11.format(f.Fecha());
        }
        else{
            nro = String.valueOf((nroguia+1))+"-"+sdf11.format(f.Fecha());
        }
        if(AnuevoGuia.equals("NUEVO")){
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("yyy-MM-dd");
                PreparedStatement pst=cn.prepareStatement(sSQL);
                pst.setString(1, String.valueOf(idguia+1));
                pst.setString(2, "2");
                pst.setString(3, cmbProvincia.getSelectedItem().toString());
                pst.setString(4, sdf.format(dcFecha.getDate()));
                pst.setString(5, txtEnviador.getText());
                if(txtResponsable.isEnabled()){
                    pst.setString(6, txtResponsable.getText());
                }
                else{
                    pst.setString(6, cmbResponsable.getSelectedItem().toString());
                }
                pst.setString(7, "ACTIVO");
                pst.setString(8, iddependencia);
                pst.setString(9, nro);
                int n=pst.executeUpdate();
                if(n>0){
                    JOptionPane.showMessageDialog(null, msj);
                    HIGuia(false);
                    HIDetalle(true);
                    btnNuevoGuia.setEnabled(false);
                    btnGuardar.setEnabled(false);
                    btnCancelar.setEnabled(false);
                    btnNuevoDetalle.setEnabled(true);    
                    btnAgregar.setEnabled(true);
                    btnImprimir.setEnabled(true);
                    AnuevoDetalle="NUEVO";
                    txtResponsable.setEnabled(false);
                    txtResponsable.setText("");
                    cbResponsable.setSelected(false);
                }
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if(AnuevoGuia.equals("MODIFICAR")){
            try {
                PreparedStatement pst1=cn.prepareStatement(sSQL1);
                pst1.setString(1, cmbProvincia.getSelectedItem().toString());
                if(txtResponsable.isEnabled()){
                    pst1.setString(2, txtResponsable.getText());
                }
                else{
                    pst1.setString(2, cmbResponsable.getSelectedItem().toString());
                }
                pst1.setString(3, iddependencia); 
                int n1=pst1.executeUpdate();
                if(n1>0){
                     JOptionPane.showMessageDialog(null, msj);
                    HIGuia(false);
                    HIDetalle(true);
                    btnNuevoGuia.setEnabled(false);
                    btnGuardar.setEnabled(false);
                    btnCancelar.setEnabled(false);
                    btnNuevoDetalle.setEnabled(true);    
                    btnAgregar.setEnabled(true);
                    btnImprimir.setEnabled(true);
                    AnuevoDetalle="NUEVO";
                    txtResponsable.setEnabled(false);
                    txtResponsable.setText("");
                    cbResponsable.setSelected(false);
                }
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, "ERROR \n"+e.toString());
            }
            
        }
        btnNuevoDetalle.setEnabled(false);
        IdiguiaActiva();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void cbResponsableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbResponsableActionPerformed
        if(cbResponsable.isSelected()){
            txtResponsable.setEnabled(true);
            cmbResponsable.setEnabled(false);
        }
        else{
            txtResponsable.setEnabled(false);
            cmbResponsable.setEnabled(true);
        }
    }//GEN-LAST:event_cbResponsableActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        b=false;
        AnuevoGuia="";
        HIGuia(b);
    }//GEN-LAST:event_btnCancelarActionPerformed
    public void IdiguiaActiva(){
     try {
           String sql="select max(idguia), nroguia from guia where idtipo_guia=2 and estado like 'ACTIVO'";
           Statement st = cn.createStatement();
           ResultSet rs = st.executeQuery(sql);
           while(rs.next()){
               lblGuiaProv.setText(rs.getString(2));
           }
        } catch (Exception e) {
            System.out.println(""+e);
        }
    }
    private void btnNuevoDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoDetalleActionPerformed
        TablaGuiaPro();
        txtNroDoc.requestFocus();
        b=true;
        AnuevoDetalle="NUEVO";
        btnGuardar.setEnabled(false); 
        btnNuevoGuia.setEnabled(false);
        btnCancelar.setEnabled(false);
        HIDetalle(b);
        try {
           String sql="select max(idguia), nroguia from guia where idtipo_guia=2 and estado like 'ACTIVO'";
           Statement st = cn.createStatement();
           ResultSet rs = st.executeQuery(sql);
           while(rs.next()){
               lblGuiaProv.setText(rs.getString(2));
           }
        } catch (Exception e) {
            System.out.println(""+e);
        }
        btnNuevoDetalle.setEnabled(false);
        TablaGuiaPro();
    }//GEN-LAST:event_btnNuevoDetalleActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String sSQL = null,msj;
        txtNroDoc.requestFocus();
        switch(AnuevoDetalle){
            case "NUEVO":
                sSQL="INSERT INTO GUIA_DETALLE (IDGUIA_D, IDTIPO_GUIA, IDGUIA, "
                        + "NRO_DOC, DEPENDENCIA_O, IDTIPO_DOC) "
                        + "VALUES(?,?,?,?,?,?)";
                msj="DOCUMENTO INGRESADO";
                break;
            case "MODIFICAR":
                sSQL="UPDATE GUIA_DETALLE "
                        + "SET NRO_DOC = ?,"
                        + "DEPENDENCIA_O = ?,"
                        + "IDTIPO_DOC = ? "
                        + "WHERE IDGUIA_D="+idGuia_d+" AND IDTIPO_GUIA = 2 "
                        + "AND IDGUIA= (select max(idguia) from guia where idtipo_guia=2 AND Estado like 'ACTIVO')";
                msj="DOCUMENTO MODIFICADO";
                break;
            default:
                    msj="ERROR";
                break;
        }
        if("NUEVO".equals(AnuevoDetalle)){
            String idguia = null;
            int idguia_D = 0;
            try {
                String sql="select max(idguia) from guia where idtipo_guia=2 "
                        + "and estado like 'ACTIVO'";
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    idguia=rs.getString(1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            try {
                String sql="select count(idguia_d) from guia_detalle "
                        + "where idtipo_guia=2 and idguia="+idguia;
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    idguia_D=rs.getInt(1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            try {
                PreparedStatement pst = cn.prepareStatement(sSQL);
                pst.setString(1, String.valueOf(idguia_D+1));
                pst.setString(2, "2");
                pst.setString(3, idguia);
                pst.setString(4, txtNroDoc.getText());
                pst.setString(5, txtDependenciaO.getText());
                pst.setString(6, String.valueOf(cmbTipoDoc.getSelectedIndex()+1));
                int n=pst.executeUpdate();
                if(n>0){
                    JOptionPane.showMessageDialog(null, msj);
                    HIDetalle(true);
                    AnuevoDetalle="NUEVO";
                    TablaGuiaPro();
                }
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(rootPane, "POR FAVOR REGISTRE UNA NUEVA GUIA");
                JOptionPane.showMessageDialog(null, e);
                HIDetalle(false);
            }
        }
        if("MODIFICAR".equals(AnuevoDetalle)){
            try {
                PreparedStatement pst = cn.prepareStatement(sSQL);
                pst.setString(1, txtNroDoc.getText().toUpperCase());
                pst.setString(2, txtDependenciaO.getText().toUpperCase());
                pst.setString(3, String.valueOf(cmbTipoDoc.getSelectedIndex()+1));
                int n=pst.executeUpdate();
                if(n>0){
                    JOptionPane.showMessageDialog(null, msj);
                    HIDetalle(true);
                    AnuevoDetalle="NUEVO";
                    TablaGuiaPro();
                }
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            } 
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        btnFinalizar.setEnabled(true);
        CLASSREPORT.GUIA_PROVREPORT gpro= new CLASSREPORT.GUIA_PROVREPORT();
        gpro.ejecutarReporte();
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        String idguia = null;
        try {
            String sql="select max(idguia) from guia where idtipo_guia=2 "
                    + "and nroguia='"+lblGuiaProv.getText()+"'";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
            idguia=rs.getString(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        try {
            String sql="UPDATE GUIA SET ESTADO=? WHERE IDGUIA="+idguia+" "
                    + "AND ESTADO LIKE 'ACTIVO' and idtipo_guia=2";
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, "ENVIADO");
            int n=pst.executeUpdate();
            if(n>0){
                HIDetalle(false);
                btnNuevoDetalle.setEnabled(false);
                btnAgregar.setEnabled(false);
                btnImprimir.setEnabled(false);
                btnFinalizar.setEnabled(false);
                btnGuardar.setEnabled(true); 
                btnNuevoGuia.setEnabled(true);
                btnCancelar.setEnabled(true);
                TablaGuiaPro();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnDCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDCancelarActionPerformed
        b=false;
        AnuevoGuia="";
        HIDetalle(b);
        btnNuevoGuia.setEnabled(true);
        btnFinalizar.setEnabled(false);
        btnNuevoDetalle.setEnabled(true);
    }//GEN-LAST:event_btnDCancelarActionPerformed

    private void miEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditarActionPerformed
       int filasel;
       String id;
       try {
           filasel = tblGuiaPro.getSelectedRow();
           if(filasel == -1){
               JOptionPane.showMessageDialog(null, "no se a seleccionado niguna fila");
           }
           else{
               b=true;
               HIDetalle(b);
               AnuevoDetalle="MODIFICAR";
               tabla_guiaProvin = (DefaultTableModel) tblGuiaPro.getModel();
               id = (String) tabla_guiaProvin.getValueAt(filasel, 0);
               BuscarDocEditar(id);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        } 
    }//GEN-LAST:event_miEditarActionPerformed

    private void txtNroDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroDocActionPerformed
        txtNroDoc.transferFocus();
    }//GEN-LAST:event_txtNroDocActionPerformed

    private void txtDependenciaOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDependenciaOActionPerformed
        txtDependenciaO.transferFocus();
    }//GEN-LAST:event_txtDependenciaOActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        BUSCAR_GUIA bg = new BUSCAR_GUIA(null, true);
        bg.setIdtipo_guia("2");
        bg.CargarTabla(null, null, null, "", null);
        bg.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmodificarActionPerformed
        int id = 0;
        String sql="SELECT count(idguia) from guia where idtipo_guia=2 and ESTADO LIKE 'ACTIVO'";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                id=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "ERROR AL CAPTURAR EL cout iddgia \n"+e);
        }
        if(id==0){
            MODIFICAR_GUIA mg = new MODIFICAR_GUIA(null, true);
            mg.setIdtipo_guia("2");
            mg.setVisible(true);
            AnuevoGuia = "MODIFICAR";
            idGuia_m=mg.getIdguia();
            cbResponsable.setSelected(true);
            txtResponsable.setEnabled(true);
            
            String sql1="select g.responsable, g.provincia, dep.dependencia from guia g "
                    + "inner join dependencias dep on g.iddependencia = dep.iddependencia "
                    + "where g.idtipo_guia=2 and g.idguia="+idGuia_m;
            try {
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql1);
                while(rs.next()){
                    txtResponsable.setText(rs.getString(1));
                    cmbProvincia.setSelectedItem(rs.getString(2));
                    cmbDependencia.setSelectedItem(rs.getString(3));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }
            HIGuia(true);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "TIENE QUE FINALIZAR LA GUIA ANTERIOR PARA PODER MODIFICAR");
        }
        btnNuevoDetalle.setEnabled(true);
        cmbResponsable.setEnabled(false);
        btnNuevoGuia.setEnabled(false);
        IdiguiaActiva();
        
        
        
    }//GEN-LAST:event_txtmodificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIA_PROVINCIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUIA_PROVINCIA().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDCancelar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNuevoDetalle;
    private javax.swing.JButton btnNuevoGuia;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox cbResponsable;
    private javax.swing.JComboBox cmbDependencia;
    private javax.swing.JComboBox cmbProvincia;
    private javax.swing.JComboBox cmbResponsable;
    private javax.swing.JComboBox cmbTipoDoc;
    private com.toedter.calendar.JDateChooser dcFecha;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGuiaProv;
    private javax.swing.JMenuItem miEditar;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JTable tblGuiaPro;
    private javax.swing.JTextField txtDependenciaO;
    private javax.swing.JTextField txtEnviador;
    private javax.swing.JTextField txtNroDoc;
    private javax.swing.JTextField txtResponsable;
    private javax.swing.JButton txtmodificar;
    // End of variables declaration//GEN-END:variables
    public void Combo(){
        String sSQL1="select tipo from tipo_doc";
        String sSQL2="select provincia from provincia "
                + "where iddepartamento=6";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL1);
            while(rs.next()){
                cmbTipoDoc.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL2);
            while(rs.next()){
                cmbProvincia.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
}
