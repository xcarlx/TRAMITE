/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package FORMULARIOS;

import CONEXION.CONEXION;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public final class GUIAS_LIMA extends javax.swing.JDialog {
    CONEXION mysql = new CONEXION();
    Connection cn = mysql.Conectar();
    DefaultTableModel tabla_guiaLima;
    boolean b=false;
    String AnuevoGuia;
    String AnuevoDetalle;
    String idGuia_d;
    
    /**
     * Creates new form GUIAS_LIMA
     */
    public GUIAS_LIMA() {
        initComponents();
        TablaGuiaLima();
        HIGuia(b);
        HIDetalle(b);
        this.setLocationRelativeTo(null);
        btnDfinalizar.setEnabled(b);
        Combo();
        idguiaActiva();
    }
    public void TablaGuiaLima(){
        String titulo [] ={"Nro","TIPO_DOC","Nro_DOC","CODIGO","DEPEN_ORI","DESTINO"};
        String registro [] = new String[6];
        String sSQL="select idguia_d, tipo, nro_doc, codigo,dependencia_o, destino "
                +"from guia_detalle gd INNER join tipo_doc tc on gd.idtipo_doc=tc.idtipo_doc "
                +"INNER JOIN guia g on g.idguia=gd.idguia " 
                +"where g.idguia=(select max(idguia) from guia where idtipo_guia=1 and estado ='ACTIVO') "
                +"AND g.`IDTIPO_GUIA`=1 " 
                +"AND g.estado = 'ACTIVO' AND gd.idtipo_guia = 1";
        tabla_guiaLima = new DefaultTableModel(null, titulo);
        
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
            while(rs.next()){
                registro[0]=rs.getString(1);
                registro[1]=rs.getString(2);
                registro[2]=rs.getString(3);
                registro[3]=rs.getString(4);
                registro[4]=rs.getString(5);
                registro[5]=rs.getString(6);
                tabla_guiaLima.addRow(registro);
            }
            tblGuiaLima.setModel(tabla_guiaLima);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
            
    }
    void BuscarDocEditar(String idguia_D){
        String sSQL;
        cn = mysql.Conectar();
        sSQL="SELECT nro_doc,dependencia_o, destino,idtipo_doc FROM guia_detalle "
                + "WHERE idguia_d="+idguia_D+" AND idtipo_guia=1 "
                + "AND idguia=(select max(idguia) from guia where idtipo_guia=1 AND ESTADO LIKE 'ACTIVO')";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
            while(rs.next()){
                txtNroDoc.setText(rs.getString(1));
                txtDependenciaO.setText(rs.getString(2));
                txtDestino.setText(rs.getString(3));
                cmbTipoDoc.setSelectedIndex(Integer.parseInt(rs.getString(4))-1);
            }
            idGuia_d=idguia_D;
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e);
        }
}
    public void HIGuia(boolean a){
        txtEnviador.setEnabled(a);
        dcFecha.setEnabled(a);
        txtEnviador.setText("");
        btnNuevoGuardar.setEnabled(a);
        btnNuevoCancelar.setEnabled(a);
    }
    public void HIDetalle(boolean a){
        txtNroDoc.setEnabled(a);
        txtDestino.setEnabled(a);
        txtDependenciaO.setEnabled(a);
        cmbTipoDoc.setEnabled(a);
        txtNroDoc.setText("");
        txtDestino.setText("");
        txtDependenciaO.setText("");
        btnDagregar.setEnabled(a);
        btnDimprimir.setEnabled(a);
        btnDCanelar.setEnabled(a);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        miEditar = new javax.swing.JMenuItem();
        panel1 = new org.edisoncor.gui.panel.Panel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEnviador = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnNuevoGuia = new javax.swing.JButton();
        btnNuevoGuardar = new javax.swing.JButton();
        btnNuevoCancelar = new javax.swing.JButton();
        btnNuevosalir = new javax.swing.JButton();
        btnNuevosalir1 = new javax.swing.JButton();
        dcFecha = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNroDoc = new javax.swing.JTextField();
        txtDependenciaO = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        cmbTipoDoc = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        btniDNuevo = new javax.swing.JButton();
        btnDagregar = new javax.swing.JButton();
        btnDimprimir = new javax.swing.JButton();
        btnDfinalizar = new javax.swing.JButton();
        btnDCanelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblIDGuia = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGuiaLima = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        miEditar.setText("MODIFICAR");
        miEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(miEditar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GUIAS PARA LIMA");
        setResizable(false);

        panel1.setColorPrimario(new java.awt.Color(255, 255, 255));
        panel1.setColorSecundario(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)), "DETALLE DE LA GUIA DE LIMA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("FECHA ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("ENVIADO POR");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnNuevoGuia.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNuevoGuia.setText("NUEVO");
        btnNuevoGuia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoGuiaActionPerformed(evt);
            }
        });

        btnNuevoGuardar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNuevoGuardar.setText("GUARDAR");
        btnNuevoGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoGuardarActionPerformed(evt);
            }
        });

        btnNuevoCancelar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNuevoCancelar.setText("CANCELAR");
        btnNuevoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoCancelarActionPerformed(evt);
            }
        });

        btnNuevosalir.setBackground(new java.awt.Color(255, 51, 0));
        btnNuevosalir.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNuevosalir.setText("SALIR");
        btnNuevosalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevosalirActionPerformed(evt);
            }
        });

        btnNuevosalir1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNuevosalir1.setText("MODIFICAR");
        btnNuevosalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevosalir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevoGuia, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevoGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevosalir, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevosalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNuevosalir, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addComponent(btnNuevosalir1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                    .addComponent(btnNuevoCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevoGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevoGuia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtEnviador, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)
                        .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtEnviador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)), "DETALLE DE LA GUIA DE LIMA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("NRO DOC");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("DEPEN ORIGEN");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("DESTINO");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("TIPO_DOC");

        txtNroDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroDocActionPerformed(evt);
            }
        });

        txtDependenciaO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDependenciaOActionPerformed(evt);
            }
        });

        txtDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDestinoActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        btniDNuevo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btniDNuevo.setText("NUEVO");
        btniDNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btniDNuevoActionPerformed(evt);
            }
        });

        btnDagregar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDagregar.setText("AGREGAR");
        btnDagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDagregarActionPerformed(evt);
            }
        });

        btnDimprimir.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDimprimir.setText("IMPRIMIR");
        btnDimprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDimprimirActionPerformed(evt);
            }
        });

        btnDfinalizar.setBackground(new java.awt.Color(0, 153, 0));
        btnDfinalizar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDfinalizar.setText("FINALIZAR");
        btnDfinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDfinalizarActionPerformed(evt);
            }
        });

        btnDCanelar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDCanelar.setText("CANCELAR");
        btnDCanelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDCanelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btniDNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDfinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDCanelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btniDNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnDagregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDimprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDfinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDCanelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("NRO GUIA");

        lblIDGuia.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblIDGuia.setForeground(new java.awt.Color(0, 0, 204));
        lblIDGuia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIDGuia.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDestino, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtNroDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(cmbTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDependenciaO, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIDGuia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap())))
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIDGuia, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(cmbTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNroDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtDependenciaO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tblGuiaLima.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(tblGuiaLima);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton1.setText("BUSCAR POR GUIAS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevosalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevosalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnNuevosalirActionPerformed

    private void btnNuevoGuiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoGuiaActionPerformed
        int id = 0;
        String sql="SELECT count(idguia) from guia where idtipo_guia=1 and ESTADO LIKE 'ACTIVO'";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                id=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "ERROR AL CAPTURAR EL cout iddgia \n"+e);
        }
        if(id==0){
            b=true;
            dcFecha.setDate(new FECHA.FECHA().Fecha());
            AnuevoGuia="NUEVO";
            HIGuia(b);
            btnNuevoGuia.setEnabled(false);
            
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "TIENE QUE FINALIZAR LA GUIA ANTERIOR PARA PODER CREAR UNA NUEVA");
            HIGuia(false);
        }
    }//GEN-LAST:event_btnNuevoGuiaActionPerformed

    private void btnNuevoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoCancelarActionPerformed
        b=false;
        AnuevoGuia="";
        HIGuia(b);
        btnNuevoGuia.setEnabled(true);
    }//GEN-LAST:event_btnNuevoCancelarActionPerformed

    private void btnNuevoGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoGuardarActionPerformed
        String sSQL = null,msj;
        switch(AnuevoGuia){
            case "NUEVO":
                sSQL="INSERT INTO guia (IDGUIA, IDTIPO_GUIA, FECHA_ENVIO, "
                + "ENVIADOR, ESTADO, IDDEPENDENCIA, NROGUIA) VALUES(?,?,?,?,?,?,?)";
                msj="GUIA INGRESADA";
                break;
            default:
                    msj="ERROR";
                break;
        }
        int idguia = 0;
        try {
            String sql="select count(idguia) from guia where idtipo_guia=1";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                idguia=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        int nroguia = 0;
        try {
            String sql2="select count(idguia) from guia where idtipo_guia=1 AND "
                    + "DATE_FORMAT(FECHA_ENVIO,'%Y') = DATE_FORMAT(NOW(),'%Y')";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql2);
            while(rs.next()){
                nroguia=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        SimpleDateFormat sdf11=new SimpleDateFormat("yyyy");
        String nro;
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy");
        if("2013".equals(sdf1.format(new FECHA.FECHA().Fecha()))){
            nro = String.valueOf((nroguia+112))+"-"+sdf11.format(new FECHA.FECHA().Fecha());
        }
        else{
            nro = String.valueOf((nroguia+1))+"-"+sdf11.format(new FECHA.FECHA().Fecha());
        }
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyy-MM-dd");
            PreparedStatement pst=cn.prepareStatement(sSQL);
            pst.setString(1, String.valueOf(idguia+1));
            pst.setString(2, "1");
            pst.setString(3, sdf.format(dcFecha.getDate()));
            pst.setString(4, txtEnviador.getText().toUpperCase());
            pst.setString(5, "ACTIVO");
            pst.setString(6, "125");
            pst.setString(7, nro);            
            int n=pst.executeUpdate();
            if(n>0){
                lblIDGuia.setText(nro);
                JOptionPane.showMessageDialog(null, msj);
                HIGuia(false);
                HIDetalle(true);
                btnNuevoGuardar.setEnabled(false);
                btnNuevoGuia.setEnabled(false);
                btnNuevoCancelar.setEnabled(false);
                btniDNuevo.setEnabled(true);    
                btnDagregar.setEnabled(true);
                btnDimprimir.setEnabled(true);
                AnuevoDetalle="NUEVO";
                btniDNuevo.setEnabled(false);
            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnNuevoGuardarActionPerformed

    private void btnDagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDagregarActionPerformed
        String sSQL = null,msj;
        switch(AnuevoDetalle){
            case "NUEVO":
                sSQL="INSERT INTO guia_detalle (IDGUIA_D, IDTIPO_GUIA, IDGUIA, "
                        + "NRO_DOC, DEPENDENCIA_O, CODIGO, DESTINO, IDTIPO_DOC) "
                        + "VALUES(?,?,?,?,?,?,?,?)";
                msj="DOCUMENTO INGRESADO";
                break;
            case "MODIFICAR":
                sSQL="UPDATE guia_detalle "
                        + "SET NRO_DOC = ?,"
                        + "DEPENDENCIA_O = ?,"
                        + "DESTINO = ?,"
                        + "IDTIPO_DOC = ? "
                        + "WHERE IDGUIA_D="+idGuia_d+" AND IDTIPO_GUIA = 1 "
                        + "AND IDGUIA= (select max(idguia) from guia where idtipo_guia=1 AND ESTADO LIKE 'ACTIVO')";
                msj="DOCUMENTO MODIFICADO";
                break;
            default:
                    msj="ERROR";
                break;
        }
        if("NUEVO".equals(AnuevoDetalle)){
            String idguia = null;
            int idguia_D = 0;
            try {
                String sql="select max(idguia) from guia where idtipo_guia=1 "
                        + "and estado like 'ACTIVO'";
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    idguia=rs.getString(1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            try {
                String sql="select count(idguia_d) from guia_detalle "
                        + "where idtipo_guia=1 and idguia="+idguia;
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    idguia_D=rs.getInt(1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            int codigo = 0;
            try {
                String sql="select count(gd.idguia_d) "
                        + "from guia g inner join guia_detalle gd  "
                        + "on g.idguia = gd.idguia and "
                        + "g.idtipo_guia=gd.IDTIPO_GUIA where g.idtipo_guia=1 "
                        + "AND DATE_FORMAT(g.FECHA_ENVIO,'%Y') = DATE_FORMAT(NOW(),'%Y')";
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    codigo=rs.getInt(1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy");
                PreparedStatement pst = cn.prepareStatement(sSQL);
                pst.setString(1, String.valueOf(idguia_D+1));
                pst.setString(2, "1");
                pst.setString(3, idguia);
                pst.setString(4, txtNroDoc.getText().toUpperCase());
                pst.setString(5, txtDependenciaO.getText().toUpperCase());
                if("2013".equals(sdf.format(new FECHA.FECHA().Fecha()))){
                    pst.setString(6, String.valueOf(codigo+6663));
                }
                else{
                    pst.setString(6, String.valueOf(codigo+1));
                }
                pst.setString(7, txtDestino.getText().toUpperCase());
                pst.setString(8, String.valueOf(cmbTipoDoc.getSelectedIndex()+1));
                int n=pst.executeUpdate();
                if(n>0){
                    JOptionPane.showMessageDialog(null, msj);
                    HIDetalle(true);
                    AnuevoDetalle="NUEVO";
                    TablaGuiaLima();
                }
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            txtNroDoc.requestFocus();
        }
        if("MODIFICAR".equals(AnuevoDetalle)){
            try {
                PreparedStatement pst = cn.prepareStatement(sSQL);
                pst.setString(1, txtNroDoc.getText().toUpperCase());
                pst.setString(2, txtDependenciaO.getText().toUpperCase());
                pst.setString(3, txtDestino.getText().toUpperCase());
                pst.setString(4, String.valueOf(cmbTipoDoc.getSelectedIndex()+1));
                int n=pst.executeUpdate();
                if(n>0){
                    JOptionPane.showMessageDialog(null, msj);
                    HIDetalle(true);
                    AnuevoDetalle="NUEVO";
                    TablaGuiaLima();
                }
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            } 
        }
    }//GEN-LAST:event_btnDagregarActionPerformed
    public void idguiaActiva(){
     try {
           String sql="select max(idguia), nroguia from guia where idtipo_guia=1 and estado like 'ACTIVO'";
           Statement st = cn.createStatement();
           ResultSet rs = st.executeQuery(sql);
           while(rs.next()){
               lblIDGuia.setText(rs.getString(2));
           }
       } catch (Exception e) {
           System.out.println(""+e);
       }
    }
    private void btniDNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btniDNuevoActionPerformed
       txtNroDoc.requestFocus();
       b=true;        
       AnuevoDetalle="NUEVO";
       btnNuevoGuardar.setEnabled(false); 
       btnNuevoGuia.setEnabled(false);
       btnNuevoCancelar.setEnabled(false);
       btniDNuevo.setEnabled(false);
       HIDetalle(b); 
       TablaGuiaLima();
       try {
           String sql="select max(idguia), nroguia from guia where idtipo_guia=1 and estado like 'ACTIVO'";
           Statement st = cn.createStatement();
           ResultSet rs = st.executeQuery(sql);
           while(rs.next()){
               lblIDGuia.setText(rs.getString(2));
           }
       } catch (Exception e) {
           System.out.println(""+e);
       }
    }//GEN-LAST:event_btniDNuevoActionPerformed

    private void btnDfinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDfinalizarActionPerformed
        
        String idguia = null;
        try {
            String sql="select max(idguia) from guia where idtipo_guia=1 and Estado like 'ACTIVO'";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
            idguia=rs.getString(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        try {
            String sql="UPDATE guia SET ESTADO=? WHERE IDGUIA="+idguia+" "
                    + "AND ESTADO LIKE 'ACTIVO' and idtipo_guia=1";
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, "ENVIADO");
            int n=pst.executeUpdate();
            if(n>0){
                HIDetalle(false);
                btniDNuevo.setEnabled(false);
                btnDagregar.setEnabled(false);
                btnDimprimir.setEnabled(false);
                btnDfinalizar.setEnabled(false);
                btnNuevoGuardar.setEnabled(true); 
                btnNuevoGuia.setEnabled(true);
                btnNuevoCancelar.setEnabled(true);
                TablaGuiaLima();
                idguiaActiva();
                JOptionPane.showMessageDialog(null, "GUIA FINALIZADA");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnDfinalizarActionPerformed

    private void btnDimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDimprimirActionPerformed
       btnDfinalizar.setEnabled(true);
       CLASSREPORT.GUIA_LIMAREPORT gl= new CLASSREPORT.GUIA_LIMAREPORT();
       gl.ejecutarReporte();
    }//GEN-LAST:event_btnDimprimirActionPerformed

    private void miEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditarActionPerformed
     int filasel;
       String id;
       try {
           filasel = tblGuiaLima.getSelectedRow();
           if(filasel == -1){
               JOptionPane.showMessageDialog(null, "no se a seleccionado niguna fila");
           }
           else{
               b=true;
               HIDetalle(b);
               AnuevoDetalle="MODIFICAR";
               tabla_guiaLima = (DefaultTableModel) tblGuiaLima.getModel();
               id = (String) tabla_guiaLima.getValueAt(filasel, 0);
               BuscarDocEditar(id);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        } 
    }//GEN-LAST:event_miEditarActionPerformed

    private void btnDCanelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDCanelarActionPerformed
        b=false;
        AnuevoGuia="";
        HIDetalle(b);
        btnNuevoGuia.setEnabled(true);
        btnDfinalizar.setEnabled(false);
        btniDNuevo.setEnabled(true);
    }//GEN-LAST:event_btnDCanelarActionPerformed

    private void txtNroDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroDocActionPerformed
        txtNroDoc.transferFocus();
    }//GEN-LAST:event_txtNroDocActionPerformed

    private void txtDependenciaOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDependenciaOActionPerformed
        txtDependenciaO.transferFocus();
    }//GEN-LAST:event_txtDependenciaOActionPerformed

    private void txtDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDestinoActionPerformed
        txtDestino.transferFocus();
    }//GEN-LAST:event_txtDestinoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BUSCAR_GUIA bg = new BUSCAR_GUIA(null, true);
        bg.setIdtipo_guia("1");
        bg.CargarTabla(null, null, null, "", null);
        bg.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnNuevosalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevosalir1ActionPerformed
        int id = 0;
        String sql="SELECT count(idguia) from guia where idtipo_guia=1 and ESTADO LIKE 'ACTIVO'";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                id=rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "ERROR AL CAPTURAR EL cout iddgia \n"+e);
        }
        if(id==0){
            MODIFICAR_GUIA mg = new MODIFICAR_GUIA(null, true);
            mg.setIdtipo_guia("1");
            mg.cmbDep.setEnabled(false);
            mg.cmbProv.setEnabled(false);
            mg.txtResponsable.setEnabled(false);
            mg.btnBuscar1.setEnabled(false);
            mg.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "TIENE QUE FINALIZAR LA GUIA ANTERIOR PARA PODER MODIFICAR");
            HIGuia(false);
        }
    }//GEN-LAST:event_btnNuevosalir1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIAS_LIMA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUIAS_LIMA().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDCanelar;
    private javax.swing.JButton btnDagregar;
    private javax.swing.JButton btnDfinalizar;
    private javax.swing.JButton btnDimprimir;
    private javax.swing.JButton btnNuevoCancelar;
    private javax.swing.JButton btnNuevoGuardar;
    private javax.swing.JButton btnNuevoGuia;
    private javax.swing.JButton btnNuevosalir;
    private javax.swing.JButton btnNuevosalir1;
    private javax.swing.JButton btniDNuevo;
    private javax.swing.JComboBox cmbTipoDoc;
    private com.toedter.calendar.JDateChooser dcFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIDGuia;
    private javax.swing.JMenuItem miEditar;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JTable tblGuiaLima;
    private javax.swing.JTextField txtDependenciaO;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtEnviador;
    private javax.swing.JTextField txtNroDoc;
    // End of variables declaration//GEN-END:variables
    public void Combo(){
        String sSQL="select tipo from tipo_doc";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
            while(rs.next()){
                cmbTipoDoc.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
}
